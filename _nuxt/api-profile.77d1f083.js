import{_ as S}from"./mx-loading.4ecc75fb.js";import{E as U,A as n,B as w,G as k,o as f,e as m,c as C,u as v}from"./entry.ce67fe4b.js";import{m as a}from"./request.5554df2c.js";const $={class:"mx-image"},x=["src","data-src"],F={name:"MxImage"},B=Object.assign(F,{props:{imageUrl:{type:String,default:"/default-avatar.png"},errorUrl:{type:String,default:"/default-avatar.png"},defaultUrl:{type:String,default:"/default-avatar.png"},defaultLoading:{type:Boolean,default:!0},useLoading:{type:Boolean,default:!0}},setup(u){const e=u,s="__EMPTY__",{imageUrl:r,errorUrl:d,defaultUrl:p,defaultLoading:h}=U(e),l=n(!1),c=n(!1),i=n(h.value),g=w(()=>l.value?d.value:c.value&&!i.value?r.value:p.value),y=()=>{l.value=!1,c.value=!0,i.value=!1},_=()=>{l.value=!0,c.value=!1,i.value=!1};return k(r,()=>{if(!r.value||r.value===s){i.value=!1;return}i.value=!0;const o=new Image;o.src=r.value,o.onload=y,o.onerror=_},{immediate:!0}),(o,P)=>(f(),m("div",$,[e.useLoading&&i.value?(f(),C(S,{key:0,class:"mx-image-loading",position:"left"})):(f(),m("img",{key:1,src:v(g),"data-src":v(r)},null,8,x))]))}}),t={profileServiceUrl:"https://api.maxthon.com",loginServiceUrl:"https://api.maxthon.com"};class E{static async getProfile(){return this.userProfile||(this.userProfile=await a.fetchFormWithCookie(`${t.profileServiceUrl}/web/profile`)),this.userProfile}static async saveProfile(e,s){return await a.fetchFormWithCookie(`${t.profileServiceUrl}/web/modify?from=${e}`,s)}static async getSysAvatarList(){return this.sysAvatar||(this.sysAvatar=await a.fetchFormWithCookie(`${t.profileServiceUrl}/web/sys-avatar`)),this.sysAvatar}static async uploadImage(e){return await a.fetchFileWithCookie(`${t.profileServiceUrl}/web/upload?type=avatar`,e)}static async verifyPassword(e){return await a.fetchFormWithCookie(`${t.profileServiceUrl}/web/pass/verify`,e)}static async modifyPassword(e){return await a.fetchFormWithCookie(`${t.profileServiceUrl}/web/pass/modify`,e)}static async get2faState(){return this.authState||(this.authState=await a.fetchFormWithCookie(`${t.loginServiceUrl}/2fa/state`)),this.authState}static reset2faState(){this.authState=void 0}static async get2faQr(){return await a.fetchFormWithCookie(`${t.loginServiceUrl}/2fa/setup`)}static async verify2faCode(e){return await a.fetchFormWithCookie(`${t.loginServiceUrl}/2fa/verify?code=${e}`)}}export{B as _,E as p};
